name: Update Homebrew Formula

on:
  workflow_dispatch:  # 수동 실행
    inputs:
      release_tag:
        description: 'Release tag (e.g. v0.6.2)'
        required: false

  workflow_run:       # "Release" 워크플로우가 끝났을 때 자동 실행
    workflows: ["Release"]
    types:
      - completed

permissions:
  contents: write

jobs:
  update-homebrew:
    name: Update Homebrew Formula
    runs-on: macos-latest
    environment: packaging

    # Release 워크플로우가 실패했을 경우 실행 안 함
    if: github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success'

    steps:
      - name: Checkout this repository
        uses: actions/checkout@v4

      - name: Install gnu-sed
        run: brew install gnu-sed

      - name: Determine version tag
        id: get_version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ -n "${{ github.event.inputs.release_tag }}" ]; then
            echo "VERSION=${{ github.event.inputs.release_tag }}" >> $GITHUB_ENV
          else
            TAG=$(gh api repos/${{ github.repository }}/releases/latest --jq .tag_name)
            echo "VERSION=$TAG" >> $GITHUB_ENV
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Clone Homebrew tap repository
        run: |
          git clone https://x-access-token:${{ secrets.HOMEBREW_TAP_TOKEN }}@github.com/lablup/homebrew-tap.git
          cd homebrew-tap
          git config user.name "GitHub Action"
          git config user.email "actions@github.com"

      - name: Download release artifacts and calculate SHA256
        run: |
          cd homebrew-tap
          VERSION="${{ env.VERSION }}"
          VERSION="${VERSION#v}"  # remove leading 'v'

          MAC_URL="https://github.com/inureyes/all-smi/releases/download/v${VERSION}/all-smi-macos-aarch64.zip"
          LINUX_ARM_URL="https://github.com/inureyes/all-smi/releases/download/v${VERSION}/all-smi-linux-aarch64.tar.gz"
          LINUX_X86_URL="https://github.com/inureyes/all-smi/releases/download/v${VERSION}/all-smi-linux-x86_64.tar.gz"

          mkdir -p tmp
          curl -Ls "$MAC_URL" -o tmp/mac.zip
          curl -Ls "$LINUX_ARM_URL" -o tmp/linux-arm.tar.gz
          curl -Ls "$LINUX_X86_URL" -o tmp/linux-x86.tar.gz

          MAC_SHA=$(shasum -a 256 tmp/mac.zip | awk '{print $1}')
          LINUX_ARM_SHA=$(shasum -a 256 tmp/linux-arm.tar.gz | awk '{print $1}')
          LINUX_X86_SHA=$(shasum -a 256 tmp/linux-x86.tar.gz | awk '{print $1}')

          echo "mac_sha=$MAC_SHA" >> $GITHUB_ENV
          echo "linux_arm_sha=$LINUX_ARM_SHA" >> $GITHUB_ENV
          echo "linux_x86_sha=$LINUX_X86_SHA" >> $GITHUB_ENV

      - name: Update formula
        run: |
          cd homebrew-tap
          gsed -i "s/^  version .*/  version   \"${VERSION}\"/" Formula/all-smi.rb
          gsed -i "s|all-smi-macos-aarch64.zip\".*|all-smi-macos-aarch64.zip\"\n      sha256  \"${mac_sha}\"|" Formula/all-smi.rb
          gsed -i "s|all-smi-linux-aarch64.tar.gz\".*|all-smi-linux-aarch64.tar.gz\"\n      sha256   \"${linux_arm_sha}\"|" Formula/all-smi.rb
          gsed -i "s|all-smi-linux-x86_64.tar.gz\".*|all-smi-linux-x86_64.tar.gz\"\n      sha256   \"${linux_x86_sha}\"|" Formula/all-smi.rb

      - name: Commit and push changes to tap
        run: |
          cd homebrew-tap
          git add Formula/all-smi.rb
          git commit -m "bump: all-smi to v${VERSION}"
          git push origin main